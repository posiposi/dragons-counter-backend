services:
  database:
    image: mysql:8.0
    container_name: dragons-counter-db
    restart: always
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - '3306:3306'
    volumes:
      - mysql_data:/var/lib/mysql

  test-database:
    image: mysql:8.0
    container_name: dragons-counter-test-db
    restart: always
    env_file:
      - .env.test
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - '3307:3306'
    volumes:
      - test_mysql_data:/var/lib/mysql

  api-docs:
    image: nginx:alpine
    ports:
      - '8080:80'
    volumes:
      - ./docs:/usr/share/nginx/html:ro
      - ./docs/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    container_name: dragons-counter-docs

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: dragons-counter-app
    restart: always
    env_file:
      - .env
    environment:
      NODE_ENV: development
      DATABASE_URL: ${DATABASE_URL}
    ports:
      - '3001:3000'
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - database
    command: npm run start:dev

volumes:
  mysql_data:
  test_mysql_data:
